Welcome back in this task.
Let's load the spreadsheet we looked at earlier, using
the Pandas Library and combine the various sheets
into one single data frame.
So lets navigate back to Jupiter Lab and our notebook
under the task three subheading.
And here, since we've already imported pandas as P D.
Let's use pandas to read this Excel spreadsheet
and let's store the Excel object in this variable called
Excel s and use p d dot excel file to go ahead and read
this entire spreadsheet into memory along with all the sheets
that contains.
And here we need to pass in the file on the file path
to the spreadsheet.
So this is in the sub folder called Data, and the name is
bank term deposit marketing analysis.
So once you're type bank, you can just press your tab key,
and it should automatically complete the file name for you.
And once you're done, feel free to hit shift enter.
So this will take about a few seconds, maybe 5 to 15 seconds
to load the data frame into memory, after which we can take
a look at what all the different sheets are within this Excel
object And to do that, we can type in Excel s dot sheet,
underscore names.
And then when you run this cell names is in plural.
Of course, when you run the cell, you'll see all the names
of the different sheets within this master spreadsheet.
So let me quickly go back and show that to you.
So here was the original spreadsheet.
It has very sheets like the data description and step
one collect information, client info and so on.
And that's exactly what you see in this output right here.
So the sheets that we care about are actually not this entire
set, right?
It's Ah, it's a subset and the sheets where that we care
about our client info, loan history, marketing history
and subscription history.
So now we can read thes individual Excel sheets
from this Excel object and store them as individual data
frames that well later join using the I.
D column.
So let's create a separate data frame for each
one of the sheets that we are interested in.
So the 1st 1 is client info and we can use pandas read Excel
method to read Underscore Excel, and we are not reading
from the disk anymore.
So currently, the file, which is stored in the X Ellis
object, is in python memory.
So we're just using that Excel s object and we are loading
a particular sheet name, which is client underscore info
in all caps, All right, and we do the same thing.
We repeat the same process for loan history, marketing
history and the subscription history sheets.
So let's go ahead and type this So this might seem a bit
boring and banal, but this is one of the most fundamental
and important parts of machine learning.
You usually hear about it in the context of different models
and algorithms.
But all of the hard work goes into a data preparation
and data munge ing and feature engineering.
So this is just one part of that that's crucial
and can't be overlooked.
So now we're importing the loan history sheet and creating
a data frame for it.
And let's type in marketing underscore history for our other
data frame and read it from our ex Ellis object.
And thing to note is that so far we have used underscores
between these two words.
But for marketing history, you'll notice that in um,
the spreadsheet.
There's actually a space rather than an underscore.
So this is a common mistake, you would see.
So what I'm trying to say is, if you see an error, um, this
is probably it.
So you need to space out marketing in history and similarly
for the subscription history, which is the last sheep
that we're interested in.
And here there's a space between subscription and history.
Great. And to go ahead and create all of these data frames,
feel free to hit shift, enter.
So this should be faster than loading the entire data
like we did just in the cell above.
All right.
So to confirm we have imported them correctly.
Let's take a look at the first few entries of each
of these data frames.
And to do that, we can use the handy function from, um,
Pandas Call head.
All right.
So in the client info data frame, we see there's the i d.
Call him age, job, marital status and education.
And if you want, you can always cross check
over on the actual spreadsheet itself.
So we have the same column in the same order I d.
A job, marital and education.
Great. So let's do this for loan history, marketing history
and subscription history to just as a sanity check.
So it's good to do this checking early in the process
so we don't invest too much later.
And if we find a bug, it's We have to come all the way back
here and try to debug and figure out what was wrong.
Great. Okay, these are all the column names in the marketing
history, data frame and the corresponding sheet
in the original spreadsheet.
And finally, let's take a look at subscription history dot
head. So this should just have the term deposit and I d
columns.
And there we go.
Great. You can see that each of these data frames has an I.
D column and the subscription history here.
The data frame contains the term deposit column,
and this column is a binary valued column that has no
if a client did not enroll in a term deposit.
And yes, if they enrolled, so you can tell that this is going
to be a binary classification problem.
But before we can move on to building classification models
or letting a store, autumn will do it for us.
We can combine the data into a single table.
So let's use pandas merged operation to merge two data frames
based on the I D column.
And we can do this in an iterative fashion where we first
merge the client info and loan history data frames and then
merged marketing his tree with that previously merged data
frame and so on.
So let's do that here.
Let's call our data frame DF, and we'll use the p d dot merge
function and merge the client info and loan history data
frames.
So we just want these two day data frames to be joined side
by side.
And we also want to ensure that the I.
D column is not duplicated because both of them contain
the same color.
And the way we emerged them is on the common columns
of the intersection of columns between these two data frames
and the column that's common to both of them is I d great.
So what other data friends do we have left?
So we've merged client info and loan history, and now
we have left marketing history and the subscription history.
So let's quickly do that here.
So we can use p dot merch.
So I hope you're getting comfortable with the work floor now.
And we are joining marketing history to this data frame
that contains client info and low in history.
And remember that we are joining them based on the column
that's coming to them.
And that's I d.
And this will also ensure that your I D column is not
duplicated Each time you merge these data frames.
And this is our last merged operation here.
We just need to emerge the subscription history Ah, data
frame with this data frame that we've been creating so far,
DF i d There we go.
And now we can take a look at the first few entries of this
combined data frame.
So hopefully we should see all the different sheets from,
ah, the data set that all the different sheets that we care
about, like client info, loan history, marketing history,
subscription history, all within the same table or data frame
structure here.
So let's hit, shift and enter and there we go.
So on the left, we have the I D column and then all the rest
of the columns are unique and finally we all know I d is
a unique feature, so you're going to want to get rid
of that before you can do the machine learning.
So in this case, we are going to have to pull that out
because we don't want it to be ah, in there because it's not
predictive.
And if it is predictive, you're probably dealing
with some sort of data leakage issue.
So you always pretty much want to remove I d columns
unless it's some sort of cluster i d.
So unique I d columns.
You always want to get rid off, and the way we can do
that is drop the column using the Panda Zeta frame dot Drop
Method two.
DF equals DF dot drop, and we are specifying that we want
to drop the I D column and to specify that it's a column
and not a row.
We need to set the access to one and then press shift, enter
and then you're done.
Awesome.
So in this task, we looked at the bank marketing campaign
data set, understood its attributes and imported the data
said, or spreadsheet using pandas and combine the important
sheets using the merge operation in pandas data frames
into one big data frame or table.
And finally we dropped the unique I D column as it has
no predictive value.
In the next task, let's start an H 20 cluster and convert our
pandas data frame into an actual frame and create our Taney
a training and test sets.